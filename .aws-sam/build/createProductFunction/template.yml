# This is the SAM template that represents the architecture of your serverless application
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-basics.html

# The AWSTemplateFormatVersion identifies the capabilities of the template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/format-version-structure.html
AWSTemplateFormatVersion: 2010-09-09
Description: >-
  product-CRUD

# Transform section specifies one or more macros that AWS CloudFormation uses to process your template
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/transform-section-structure.html
Transform:
  - AWS::Serverless-2016-10-31
# Resources declares the AWS resources that you want to include in the stack
# https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html
Resources:
  # Each Lambda function is defined by properties:
  # https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction

  # This is a Lambda function config associated with the source code: get-all-items.js
  createProductFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/createProduct.handler
      Runtime: nodejs14.x
      MemorySize: 128
      Timeout: 100
      Description: Create product endpoint
      Events:
        Api:
          Type: Api
          Properties:
            Path: /products
            Method: POST

  getProductsFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/getProducts.handler
      Runtime: nodejs14.x
      MemorySize: 128
      Timeout: 100
      Description: Create product endpoint
      Events:
        Api:
          Type: Api
          Properties:
            Path: /products
            Method: GET

  getProductFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/getProductById.handler
      Runtime: nodejs14.x
      MemorySize: 128
      Timeout: 100
      Description: Create product endpoint
      Events:
        Api:
          Type: Api
          Properties:
            Path: /products/{product}
            Method: GET

  deleteProductFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/deleteProduct.handler
      Runtime: nodejs14.x
      MemorySize: 128
      Timeout: 100
      Description: Create product endpoint
      Events:
        Api:
          Type: Api
          Properties:
            Path: /products/{product}
            Method: DELETE

  updateProductFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/updateProduct.handler
      Runtime: nodejs14.x
      MemorySize: 128
      Timeout: 100
      Description: Update product endpoint
      Events:
        Api:
          Type: Api
          Properties:
            Path: /products/{product}
            Method: PUT

  triggeredTopicFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/lambdaTriggered.handler
      Runtime: nodejs14.x
      MemorySize: 128
      Timeout: 100
      Description: Update product endpoint

  myTestTopicTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: test-topic
      Subscription:
        - Protocol: lambda
          Endpoint: !GetAtt triggeredTopicFunction.Arn

  myTestTopicTopicInvokePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt triggeredTopicFunction.Arn
      Principal: sns.amazonaws.com

  publicsherTopicFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: src/handlers/publisherTopic.handler
      Runtime: nodejs14.x
      MemorySize: 128
      Timeout: 100
      Description: Update product endpoint
      Events:
        Api:
          Type: Api
          Properties:
            Path: /sns-publisher
            Method: GET

  ExampleTopicPolicy:
    Type: "AWS::SNS::TopicPolicy"
    Properties:
      Topics:
        - !Ref myTestTopicTopic
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: "sns:Publish"
            Resource: !Ref myTestTopicTopic
            Principal:
              AWS: "*"

Outputs:
  WebEndpoint:
    Description: "API Gateway endpoint URL for Prod stage"
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/"
